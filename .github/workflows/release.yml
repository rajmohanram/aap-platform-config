---
name: Release

run-name: >
  ${{ github.workflow }} - Launch AAP Job Templates

on:
  workflow_dispatch:
  pull_request:
    types: [opened, synchronize, reopened]
    paths:
        - 'environments/**/*.yml'
  push:
    branches:
      - main
    paths:
      - 'environments/**/*.yml'

permissions:
  contents: read

jobs:
  detect-changes:
    name: Detect Changes
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.detect-jobs.outputs.matrix }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Detect changed files using git
        id: detect-jobs
        run: |
          echo "Event: ${{ github.event_name }}"
          echo "Ref: ${{ github.ref }}"

          # Determine relevant changed files based on event type (pull_request or push)
          if [ "${{ github.event_name }}" == "pull_request" ]; then
            # For pull requests, compare against the target branch
            BASE_SHA="${{ github.event.pull_request.base.sha }}"
            HEAD_SHA="${{ github.event.pull_request.head.sha }}"
            echo "Comparing PR changes: $BASE_SHA..$HEAD_SHA"
            CHANGED_FILES=$(git diff --name-only "$BASE_SHA" "$HEAD_SHA")
          elif [ "${{ github.event_name }}" == "push" ]; then
            # For push events, compare with the before SHA
            echo "Comparing push changes: ${{ github.event.before }}..${{ github.sha }}"
            CHANGED_FILES=$(git diff --name-only "${{ github.event.before }}" "${{ github.sha }}")
          fi

          echo "All changed files:"
          echo "$CHANGED_FILES"

          # Filter for relevant files (environments/**/*.yml but exclude vars.yml)
          RELEVANT_FILES=$(echo "$CHANGED_FILES" | grep -E '^environments/[^/]+/[^/]+/[^/]+\.yml$' | grep -Ev '^.*vars.yml$')

          echo "Relevant changed files:"
          echo "$RELEVANT_FILES"

          matrix_json=$(echo "$RELEVANT_FILES" | jq -Rn '[inputs | split("/") | { env: .[1], cluster: .[2], job: (.[3] | split(".") | .[0]) }]')
          {
            echo 'matrix<<EOF'
            echo "$matrix_json"
            echo 'EOF'
          } >> $GITHUB_OUTPUT

  launch-jobs:
    name: Launch Job
    needs: detect-changes
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include: ${{ fromJson(needs.detect-changes.outputs.matrix) }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"
          cache: "pip"

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Install Ansible collections
        run: |
          ansible-galaxy collection install -r requirements.yml

      - name: Launch AAP Job Template
        env:
          AAP_TOKEN: ${{ secrets.AAP_TOKEN }}
          ENV: ${{ matrix.env }}
          CLUSTER: ${{ matrix.cluster }}
          JOB_TEMPLATE: ${{ matrix.job }}
        run: |
          ansible-playbook main.yml | tee ansible_playbook.log

      - name: Add ansible-playbook output to summary
        run: |
          echo '### Ansible Playbook Output' >> $GITHUB_STEP_SUMMARY
          cat ansible_playbook.log >> $GITHUB_STEP_SUMMARY

