---
name: Release

run-name: >
  ${{ github.workflow }} - Launch AAP Job Templates

on:
  workflow_dispatch:
  pull_request:
    types: [opened, synchronize, reopened]
    paths:
        - 'env/**/*.yml'
  push:
    branches:
      - main
    paths:
      - 'env/**/*.yml'

permissions:
  contents: read

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
      has-changes: ${{ steps.set-matrix.outputs.has-changes }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Detect changed files using git
        id: detect-changes
        run: |
          echo "Event: ${{ github.event_name }}"
          echo "Ref: ${{ github.ref }}"

          # Determine the comparison range based on event type (pull_request or push)
          if [ "${{ github.event_name }}" == "pull_request" ]; then
            # For pull requests, compare against the target branch
            BASE_SHA="${{ github.event.pull_request.base.sha }}"
            HEAD_SHA="${{ github.event.pull_request.head.sha }}"
            echo "Comparing PR changes: $BASE_SHA..$HEAD_SHA"
            CHANGED_FILES=$(git diff --name-only "$BASE_SHA" "$HEAD_SHA")
          else
            # For push events, compare with the before SHA
            echo "Comparing push changes: ${{ github.event.before }}..${{ github.sha }}"
            CHANGED_FILES=$(git diff --name-only "${{ github.event.before }}" "${{ github.sha }}")
          fi

          echo "All changed files:"
          echo "$CHANGED_FILES"

          # Filter for relevant files (env/**/*.yml but exclude vars.yml)
          RELEVANT_FILES=""
          while IFS= read -r file; do
            if [[ "$file" =~ ^env/.+/.+/[^/]+\.yml$ ]] && [[ ! "$file" =~ vars\.yml$ ]]; then
              if [ -z "$RELEVANT_FILES" ]; then
                RELEVANT_FILES="$file"
              else
                RELEVANT_FILES="$RELEVANT_FILES $file"
              fi
            fi
          done <<< "$CHANGED_FILES"

          echo "Relevant changed files: $RELEVANT_FILES"
          echo "relevant_files=$RELEVANT_FILES" >> $GITHUB_OUTPUT

      - name: Generate matrix
        id: set-matrix
        run: |
          changed_files="${{ steps.detect-changes.outputs.relevant_files }}"

          if [ -z "$changed_files" ] || [ "$changed_files" == " " ]; then
            echo "No relevant job template files changed"
            echo "has-changes=false" >> $GITHUB_OUTPUT
            echo "matrix={\"include\":[]}" >> $GITHUB_OUTPUT
            exit 0
          fi

          # Initialize matrix array
          matrix_include="["
          first_entry=true
          declare -A seen_combinations

          # Process each changed file
          for file in $changed_files; do
            # Extract environment, cluster, and job template from file path
            # Expected format: env/{environment}/{cluster}/{job_template}.yml
            if [[ $file =~ ^env/([^/]+)/([^/]+)/([^/]+)\.yml$ ]]; then
              environment="${BASH_REMATCH[1]}"
              cluster="${BASH_REMATCH[2]}"
              job_template="${BASH_REMATCH[3]}"

              # Create unique key to avoid duplicates
              combo_key="${environment}-${cluster}-${job_template}"

              if [[ -z "${seen_combinations[$combo_key]}" ]]; then
                seen_combinations[$combo_key]=1

                echo "Detected change: env=$environment, cluster=$cluster, job_template=$job_template"

                # Add to matrix
                entry="{\"environment\":\"$environment\",\"cluster\":\"$cluster\",\"job_template\":\"$job_template\",\"file\":\"$file\"}"

                if [ "$first_entry" = true ]; then
                  matrix_include="$matrix_include$entry"
                  first_entry=false
                else
                  matrix_include="$matrix_include,$entry"
                fi
              else
                echo "Duplicate combination detected, skipping: $combo_key"
              fi
            else
              echo "File $file doesn't match expected pattern, skipping"
            fi
          done

          matrix_include="$matrix_include]"

          if [ "$first_entry" = true ]; then
            echo "No valid job template files found in changes"
            echo "has-changes=false" >> $GITHUB_OUTPUT
            echo "matrix={\"include\":[]}" >> $GITHUB_OUTPUT
          else
            echo "has-changes=true" >> $GITHUB_OUTPUT
            echo "matrix={\"include\":$matrix_include}" >> $GITHUB_OUTPUT
            echo "Generated matrix: {\"include\":$matrix_include}"
          fi

  launch-jobs:
    name: Launch Job Templates
    needs: detect-changes
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include: ${{ fromJson(needs.detect-changes.outputs.matrix) }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set environment variables
        run: |
          echo "ENV=${{ matrix.env }}" >> $GITHUB_ENV
          echo "CLUSTER=${{ matrix.cluster }}" >> $GITHUB_ENV
          echo "JOB=${{ matrix.job }}" >> $GITHUB_ENV

      - name: debug
        run: |
          echo "Environment: $ENV"
          echo "Cluster: $CLUSTER"
          echo "Job: $JOB"
